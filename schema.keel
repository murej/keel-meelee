enum DaysInAWeek {
    Monday
    Tuesday
    Wednesday
    Thursday
    Friday
}

enum MealType {
    Breakfast
    Lunch
    Dinner
}

model MealTime {
    fields {
        day DaysInAWeek
        type MealType
    }

    operations {
        get getMealTime(id)
        list listMealTimes(id)
    }
}

model Dish {
    fields {
        name Text
        recipe Text
        portions Number
        mealItems MealItem[]
    }

    operations {
        get getDish(id)
        list listDishes()
        create createDish() with (name, recipe, portions)
        update updateDishDetails(id) with (name, recipe)
        update updateDishPortions(id) with (portions)
        delete deleteDish(id)
    }

    @permission(
        actions: [get, list, create, update, delete],
        expression: true
    )
}

model MealItem {
    fields {
        dish Dish
        meal Meal
    }
}

model Meal {
    fields {
        time MealTime
        mealItems MealItem[]
        plan Plan?
    }

    operations {
        get getMeal(id)
        list listMeals()
        // list listMyMeals(day?) {
        //     @where(meal.plan.owner == ctx.identity)
        // }
        create createMeal() with (time.day, time.type, mealItems.dish.id)
        update updateMeal(id) with (
            time.day?,
            time.type?,
            mealItems.dish.id?,
            plan.id?,
        )
        delete deleteMeal(id)
    }

    @permission(
        actions: [get, list, create, update, delete],
        expression: true
    )
}

model Plan {
    fields {
        meals Meal[]
        mouthsToFeed Number
        weekNumber Number @unique
        // owner Identity
    }

    operations {
        get getPlan(id)
        list listPlans()
        // list listMyPlans() {
        //     @where(plan.owner == ctx.identity)
        // }
        list listWeeklyPlan(weekNumber)
        create createPlan() with (meals.id?, mouthsToFeed, weekNumber)
        // {
        // @set(plan.owner = ctx.identity)
        // }
        update updatePlanMeal(id) with (meals.id?, mouthsToFeed?, weekNumber?)
        delete deletePlan(id)
    }

    @permission(
        actions: [get, list, create, update, delete],
        expression: true
    )
}
