enum DayInAWeek {
    Monday
    Tuesday
    Wednesday
    Thursday
    Friday
}

enum MealTime {
    Breakfast
    Lunch
    Dinner
}

model WeeklyPlan {
    fields {
        meals Meal[]
        weekNumber Number @unique
        owner Identity @unique
    }

    actions {
        get getMyWeeklyPlan(weekNumber) {
            @where(ctx.identity == weeklyPlan.owner)
        }
        list listMyWeeklyPlans() {
            @where(ctx.identity == weeklyPlan.owner)
        }
        create createMyWeeklyPlan() with (
            weekNumber,
            meals.dish.id,
            meals.day,
            meals.time,
        ) {
            @set(weeklyPlan.owner = ctx.identity)
        }
        update updateMyWeeklyPlan(id) with (
            weekNumber?,
            meals.dish.id?,
            meals.day?,
            meals.time?,
        ) {
            @where(ctx.identity == weeklyPlan.owner)
        }
        delete deleteMyWeeklyPlan(id) {
            @where(ctx.identity == weeklyPlan.owner)
        }
    }

    @permission(
        expression: ctx.isAuthenticated,
        actions: [get, list, create, update, delete]
    )
}

model Meal {
    fields {
        dish Dish
        day DayInAWeek
        time MealTime
        weeklyPlan WeeklyPlan
    }

    actions {
        get getMeal(id)
        list listMeals(weeklyPlan.id?)
        update updateMeal(id) with (dish.id, time)
        delete deleteMeal(id)
    }

    @permission(
        expression: ctx.isAuthenticated,
        actions: [get, list, create, update, delete]
    )
}

model Dish {
    fields {
        name Text
        recipeUrl Text?
    }

    actions {
        get getDish(id)
        list listDishes()
        create createDish() with (name, recipeUrl)
        update updateDish(id) with (name?, recipeUrl?)
        delete deleteDish(id)
    }

    @permission(
        expression: ctx.isAuthenticated,
        actions: [get, list, create, update, delete]
    )
}
